/*
 * Copyright (C) 2015 World Intellectual Property Organization (WIPO).
 * All Rights Reserved.
 *
 * This file is part of WIPO Connect.
 *
 *
 * @author Fincons
 *
 */
package org.wipo.connect.echoservice;

import java.net.URL;

import javax.xml.namespace.QName;
import javax.xml.ws.Service;
import javax.xml.ws.WebEndpoint;
import javax.xml.ws.WebServiceClient;
import javax.xml.ws.WebServiceFeature;

/**
 * This class was generated by Apache CXF 2.7.13
 * 2017-05-31T17:33:48.866+02:00
 * Generated source version: 2.7.13
 *
 */
@WebServiceClient(name = "echoService",
                  wsdlLocation = "/META-INF/wsdl/echo/echoService.wsdl",
                  targetNamespace = "http://echoService.connect.wipo.org")
public class EchoService extends Service {

    public final static URL WSDL_LOCATION;

    public final static QName SERVICE = new QName("http://echoService.connect.wipo.org", "echoService");
    public final static QName EchoServiceSOAP = new QName("http://echoService.connect.wipo.org", "echoServiceSOAP");
    static {
        URL url = EchoService.class.getResource("/META-INF/wsdl/echo/echoService.wsdl");
        if (url == null) {
            url = EchoService.class.getClassLoader().getResource("/META-INF/wsdl/echo/echoService.wsdl");
        }
        if (url == null) {
            java.util.logging.Logger.getLogger(EchoService.class.getName())
                .log(java.util.logging.Level.INFO,
                     "Can not initialize the default wsdl from {0}", "/META-INF/wsdl/echo/echoService.wsdl");
        }
        WSDL_LOCATION = url;
    }

    public EchoService(URL wsdlLocation) {
        super(wsdlLocation, SERVICE);
    }

    public EchoService(URL wsdlLocation, QName serviceName) {
        super(wsdlLocation, serviceName);
    }

    public EchoService() {
        super(WSDL_LOCATION, SERVICE);
    }

    //This constructor requires JAX-WS API 2.2. You will need to endorse the 2.2
    //API jar or re-run wsdl2java with "-frontend jaxws21" to generate JAX-WS 2.1
    //compliant code instead.
    public EchoService(WebServiceFeature ... features) {
        super(WSDL_LOCATION, SERVICE, features);
    }

    //This constructor requires JAX-WS API 2.2. You will need to endorse the 2.2
    //API jar or re-run wsdl2java with "-frontend jaxws21" to generate JAX-WS 2.1
    //compliant code instead.
    public EchoService(URL wsdlLocation, WebServiceFeature ... features) {
        super(wsdlLocation, SERVICE, features);
    }

    //This constructor requires JAX-WS API 2.2. You will need to endorse the 2.2
    //API jar or re-run wsdl2java with "-frontend jaxws21" to generate JAX-WS 2.1
    //compliant code instead.
    public EchoService(URL wsdlLocation, QName serviceName, WebServiceFeature ... features) {
        super(wsdlLocation, serviceName, features);
    }

    /**
     *
     * @return
     *     returns EchoServicePort
     */
    @WebEndpoint(name = "echoServiceSOAP")
    public EchoServicePort getEchoServiceSOAP() {
        return super.getPort(EchoServiceSOAP, EchoServicePort.class);
    }

    /**
     *
     * @param features
     *     A list of {@link javax.xml.ws.WebServiceFeature} to configure on the proxy.  Supported features not in the <code>features</code> parameter will have their default values.
     * @return
     *     returns EchoServicePort
     */
    @WebEndpoint(name = "echoServiceSOAP")
    public EchoServicePort getEchoServiceSOAP(WebServiceFeature... features) {
        return super.getPort(EchoServiceSOAP, EchoServicePort.class, features);
    }

}
